ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/stm32l0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB40:
   1:Src/stm32l0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32l0xx_it.c **** /**
   3:Src/stm32l0xx_it.c ****   ******************************************************************************
   4:Src/stm32l0xx_it.c ****   * @file    stm32l0xx_it.c
   5:Src/stm32l0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32l0xx_it.c ****   ******************************************************************************
   7:Src/stm32l0xx_it.c ****   * @attention
   8:Src/stm32l0xx_it.c ****   *
   9:Src/stm32l0xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Src/stm32l0xx_it.c ****   * All rights reserved.
  11:Src/stm32l0xx_it.c ****   *
  12:Src/stm32l0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32l0xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32l0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32l0xx_it.c ****   *
  16:Src/stm32l0xx_it.c ****   ******************************************************************************
  17:Src/stm32l0xx_it.c ****   */
  18:Src/stm32l0xx_it.c **** /* USER CODE END Header */
  19:Src/stm32l0xx_it.c **** 
  20:Src/stm32l0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32l0xx_it.c **** #include "main.h"
  22:Src/stm32l0xx_it.c **** #include "stm32l0xx_it.h"
  23:Src/stm32l0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32l0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32l0xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32l0xx_it.c **** 
  27:Src/stm32l0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32l0xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32l0xx_it.c **** 
  30:Src/stm32l0xx_it.c **** /* USER CODE END TD */
  31:Src/stm32l0xx_it.c **** 
  32:Src/stm32l0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 2


  33:Src/stm32l0xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32l0xx_it.c **** 
  35:Src/stm32l0xx_it.c **** /* USER CODE END PD */
  36:Src/stm32l0xx_it.c **** 
  37:Src/stm32l0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32l0xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32l0xx_it.c **** 
  40:Src/stm32l0xx_it.c **** /* USER CODE END PM */
  41:Src/stm32l0xx_it.c **** 
  42:Src/stm32l0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32l0xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32l0xx_it.c **** 
  45:Src/stm32l0xx_it.c **** /* USER CODE END PV */
  46:Src/stm32l0xx_it.c **** 
  47:Src/stm32l0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32l0xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32l0xx_it.c **** 
  50:Src/stm32l0xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32l0xx_it.c **** 
  52:Src/stm32l0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32l0xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32l0xx_it.c **** 
  55:Src/stm32l0xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32l0xx_it.c **** 
  57:Src/stm32l0xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32l0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  59:Src/stm32l0xx_it.c **** extern UART_HandleTypeDef huart2;
  60:Src/stm32l0xx_it.c **** /* USER CODE BEGIN EV */
  61:Src/stm32l0xx_it.c **** #define BUF_SIZE 16
  62:Src/stm32l0xx_it.c **** extern uint8_t rx_buffer[BUF_SIZE];
  63:Src/stm32l0xx_it.c **** 
  64:Src/stm32l0xx_it.c **** /* USER CODE END EV */
  65:Src/stm32l0xx_it.c **** 
  66:Src/stm32l0xx_it.c **** /******************************************************************************/
  67:Src/stm32l0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  68:Src/stm32l0xx_it.c **** /******************************************************************************/
  69:Src/stm32l0xx_it.c **** /**
  70:Src/stm32l0xx_it.c ****   * @brief This function handles Non maskable Interrupt.
  71:Src/stm32l0xx_it.c ****   */
  72:Src/stm32l0xx_it.c **** void NMI_Handler(void)
  73:Src/stm32l0xx_it.c **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  74:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32l0xx_it.c **** 
  76:Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32l0xx_it.c ****    while (1)
  34              		.loc 1 78 4 discriminator 1 view .LVU1
  79:Src/stm32l0xx_it.c ****   {
  80:Src/stm32l0xx_it.c ****   }
  35              		.loc 1 80 3 discriminator 1 view .LVU2
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 3


  78:Src/stm32l0xx_it.c ****   {
  36              		.loc 1 78 10 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE40:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB41:
  81:Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32l0xx_it.c **** }
  83:Src/stm32l0xx_it.c **** 
  84:Src/stm32l0xx_it.c **** /**
  85:Src/stm32l0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32l0xx_it.c ****   */
  87:Src/stm32l0xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32l0xx_it.c **** {
  50              		.loc 1 88 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  89:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32l0xx_it.c **** 
  91:Src/stm32l0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32l0xx_it.c ****   while (1)
  57              		.loc 1 92 3 discriminator 1 view .LVU5
  93:Src/stm32l0xx_it.c ****   {
  94:Src/stm32l0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Src/stm32l0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Src/stm32l0xx_it.c ****   }
  58              		.loc 1 96 3 discriminator 1 view .LVU6
  92:Src/stm32l0xx_it.c ****   {
  59              		.loc 1 92 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE41:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB42:
  97:Src/stm32l0xx_it.c **** }
  98:Src/stm32l0xx_it.c **** 
  99:Src/stm32l0xx_it.c **** /**
 100:Src/stm32l0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 101:Src/stm32l0xx_it.c ****   */
 102:Src/stm32l0xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 4


 103:Src/stm32l0xx_it.c **** {
  73              		.loc 1 103 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 104:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Src/stm32l0xx_it.c **** 
 106:Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Src/stm32l0xx_it.c **** 
 109:Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Src/stm32l0xx_it.c **** }
  78              		.loc 1 110 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE42:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB43:
 111:Src/stm32l0xx_it.c **** 
 112:Src/stm32l0xx_it.c **** /**
 113:Src/stm32l0xx_it.c ****   * @brief This function handles Pendable request for system service.
 114:Src/stm32l0xx_it.c ****   */
 115:Src/stm32l0xx_it.c **** void PendSV_Handler(void)
 116:Src/stm32l0xx_it.c **** {
  93              		.loc 1 116 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 117:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Src/stm32l0xx_it.c **** 
 119:Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Src/stm32l0xx_it.c **** 
 122:Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Src/stm32l0xx_it.c **** }
  98              		.loc 1 123 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE43:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB44:
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 5


 124:Src/stm32l0xx_it.c **** 
 125:Src/stm32l0xx_it.c **** /**
 126:Src/stm32l0xx_it.c ****   * @brief This function handles System tick timer.
 127:Src/stm32l0xx_it.c ****   */
 128:Src/stm32l0xx_it.c **** void SysTick_Handler(void)
 129:Src/stm32l0xx_it.c **** {
 113              		.loc 1 129 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
 130:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 131:Src/stm32l0xx_it.c **** 
 132:Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 133:Src/stm32l0xx_it.c ****   HAL_IncTick();
 121              		.loc 1 133 3 view .LVU13
 122 0002 FFF7FEFF 		bl	HAL_IncTick
 123              	.LVL0:
 134:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 135:Src/stm32l0xx_it.c **** 
 136:Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 137:Src/stm32l0xx_it.c **** }
 124              		.loc 1 137 1 is_stmt 0 view .LVU14
 125              		@ sp needed
 126 0006 10BD     		pop	{r4, pc}
 127              		.cfi_endproc
 128              	.LFE44:
 130              		.section	.text.DMA1_Channel4_5_6_7_IRQHandler,"ax",%progbits
 131              		.align	1
 132              		.global	DMA1_Channel4_5_6_7_IRQHandler
 133              		.syntax unified
 134              		.code	16
 135              		.thumb_func
 137              	DMA1_Channel4_5_6_7_IRQHandler:
 138              	.LFB45:
 138:Src/stm32l0xx_it.c **** 
 139:Src/stm32l0xx_it.c **** /******************************************************************************/
 140:Src/stm32l0xx_it.c **** /* STM32L0xx Peripheral Interrupt Handlers                                    */
 141:Src/stm32l0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 142:Src/stm32l0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 143:Src/stm32l0xx_it.c **** /* please refer to the startup file (startup_stm32l0xx.s).                    */
 144:Src/stm32l0xx_it.c **** /******************************************************************************/
 145:Src/stm32l0xx_it.c **** 
 146:Src/stm32l0xx_it.c **** /**
 147:Src/stm32l0xx_it.c ****   * @brief This function handles DMA1 channel 4, channel 5, channel 6 and channel 7 interrupts.
 148:Src/stm32l0xx_it.c ****   */
 149:Src/stm32l0xx_it.c **** void DMA1_Channel4_5_6_7_IRQHandler(void)
 150:Src/stm32l0xx_it.c **** {
 139              		.loc 1 150 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 10B5     		push	{r4, lr}
 144              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 6


 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 151:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_6_7_IRQn 0 */
 152:Src/stm32l0xx_it.c **** 
 153:Src/stm32l0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_6_7_IRQn 0 */
 154:Src/stm32l0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 147              		.loc 1 154 3 view .LVU16
 148 0002 0248     		ldr	r0, .L9
 149 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 150              	.LVL1:
 155:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_6_7_IRQn 1 */
 156:Src/stm32l0xx_it.c **** 
 157:Src/stm32l0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_6_7_IRQn 1 */
 158:Src/stm32l0xx_it.c **** }
 151              		.loc 1 158 1 is_stmt 0 view .LVU17
 152              		@ sp needed
 153 0008 10BD     		pop	{r4, pc}
 154              	.L10:
 155 000a C046     		.align	2
 156              	.L9:
 157 000c 00000000 		.word	hdma_usart2_rx
 158              		.cfi_endproc
 159              	.LFE45:
 161              		.section	.text.USART2_IRQHandler,"ax",%progbits
 162              		.align	1
 163              		.global	USART2_IRQHandler
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	USART2_IRQHandler:
 169              	.LFB46:
 159:Src/stm32l0xx_it.c **** 
 160:Src/stm32l0xx_it.c **** /**
 161:Src/stm32l0xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI li
 162:Src/stm32l0xx_it.c ****   */
 163:Src/stm32l0xx_it.c **** void USART2_IRQHandler(void)
 164:Src/stm32l0xx_it.c **** {
 170              		.loc 1 164 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 10B5     		push	{r4, lr}
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 4, -8
 177              		.cfi_offset 14, -4
 165:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 166:Src/stm32l0xx_it.c **** 
 167:Src/stm32l0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 168:Src/stm32l0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 178              		.loc 1 168 3 view .LVU19
 179 0002 054C     		ldr	r4, .L12
 180 0004 2000     		movs	r0, r4
 181 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 182              	.LVL2:
 169:Src/stm32l0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 170:Src/stm32l0xx_it.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&huart2,rx_buffer,BUF_SIZE);
 183              		.loc 1 170 3 view .LVU20
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 7


 184 000a 0449     		ldr	r1, .L12+4
 185 000c 1022     		movs	r2, #16
 186 000e 2000     		movs	r0, r4
 187 0010 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 188              	.LVL3:
 171:Src/stm32l0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 172:Src/stm32l0xx_it.c **** }
 189              		.loc 1 172 1 is_stmt 0 view .LVU21
 190              		@ sp needed
 191 0014 10BD     		pop	{r4, pc}
 192              	.L13:
 193 0016 C046     		.align	2
 194              	.L12:
 195 0018 00000000 		.word	huart2
 196 001c 00000000 		.word	rx_buffer
 197              		.cfi_endproc
 198              	.LFE46:
 200              		.text
 201              	.Letext0:
 202              		.file 2 "c:\\users\\lzh\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpack
 203              		.file 3 "c:\\users\\lzh\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpack
 204              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l031xx.h"
 205              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 206              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 207              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 208              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart_ex.h"
 209              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_it.c
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:19     .text.NMI_Handler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:42     .text.HardFault_Handler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:65     .text.SVC_Handler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:71     .text.SVC_Handler:0000000000000000 SVC_Handler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:85     .text.PendSV_Handler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:91     .text.PendSV_Handler:0000000000000000 PendSV_Handler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:105    .text.SysTick_Handler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:111    .text.SysTick_Handler:0000000000000000 SysTick_Handler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:131    .text.DMA1_Channel4_5_6_7_IRQHandler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:137    .text.DMA1_Channel4_5_6_7_IRQHandler:0000000000000000 DMA1_Channel4_5_6_7_IRQHandler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:157    .text.DMA1_Channel4_5_6_7_IRQHandler:000000000000000c $d
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:162    .text.USART2_IRQHandler:0000000000000000 $t
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:168    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
C:\Users\lzh\AppData\Local\Temp\ccZoBWUH.s:195    .text.USART2_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart2_rx
HAL_UART_IRQHandler
HAL_UARTEx_ReceiveToIdle_DMA
huart2
rx_buffer
